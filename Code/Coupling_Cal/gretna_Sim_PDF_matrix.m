function gretna_Sim_PDF_matrix(Data_path, File_filter, Npoints, PDFType, SIMType)

%==========================================================================
% This function is used to calculate similarity among different probability
% distribution functions based on the Jensen每Shannon (JS) divergence,
% Kullback每Leibler (KL) divergence, or Kolmogorov-Smirnov (KS) distance.
% NB, the probability distribution functions are estimated from 1-D
% variable.
%
% Syntax: function gretna_Sim_PDF_matrix(Data_path, File_filter, Npoints, PDFType, SIMType)
%
% Inputs:
%         Data_path:
%                   The directory where the data files (.mat) are sorted.
%                   The data files can be generated by gretna_Surf_ROI_signal.m
%                   or gretna_Vol_ROI_signal.m.
%       File_filter:
%                   The prefix of those data files to be processed.
%           Npoints:
%                   The number of sampling points (default 2^8).
%           PDFType:
%                   'ksdensity': ksdensity works best for continuously
%                                distributed samples (matlab function, default);
%                   'tde':       Topological density estimation (Huntsman, 2017);
%                   'kde':       Reliable and extremely fast kernel density
%                                estimation (Botev et al., 2010).
%           SIMType:
%                   'JS': Jensen每Shannon distance-based similarity (default);
%                   'KL': Kullback每Leibler divergence-based similarity;
%                   'KS': Kolmogorov-Smirnov distance-based similarity.
%
% Hao WANG,HZNU, Hangzhou, 2015/05/01, hall.wong@outlook.com
% Jinhui WANG, HZNU, Hangzhou, 2015/05/01, Jinhui.Wang.1982@gmail.com
%==========================================================================

if nargin < 2
    error('At least two arguments are needed!'); end

if nargin == 2
    Npoints = 2^8; PDFType = 'ksdensity'; SIMType = 'JS'; end

if nargin == 3
    PDFType = 'ksdensity'; SIMType = 'JS'; end

if nargin == 4
    SIMType = 'JS'; end

if nargin > 5
    error('At most five arguments are permitted!'); end

cd(Data_path)
Sig_file = dir([File_filter '*.mat']);

for sub = 1:size(Sig_file,1)
    fprintf('Calculating similarity matrix for %s\n', Sig_file(sub).name);
    
    ind_data = load(deblank(Sig_file(sub).name),'Sig_roi');
    [Num_imgs, Num_regs] = size(ind_data.Sig_roi);
    
    PDF = zeros(Npoints, Num_regs);
    SIM = zeros(Num_regs, Num_regs, Num_imgs);
    
    for iimg = 1:Num_imgs
        
        for ireg = 1:Num_regs
            data = ind_data.Sig_roi{iimg,ireg};
            [PDF(:,ireg), ~] = gretna_PDF(data, Npoints, PDFType);
        end
        
        switch upper(SIMType)
            case 'JS'
                Sim = gretna_JSDs(PDF);
                
            case 'KL'
                Sim = gretna_KLDs(PDF);
                
            case 'KS'
                Sim = gretna_KSDs(PDF);
                
            otherwise
                error('Other types are not supported!');
        end
        
        SIM(:,:,iimg) = Sim;
    end
    
    save([upper(SIMType) '_' upper(PDFType) '_' num2str(Npoints) '_' Sig_file(sub).name], 'SIM')
    
    fprintf('Calculating similarity matrix for %s ...... is done\n', Sig_file(sub).name);
end

return